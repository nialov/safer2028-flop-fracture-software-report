name = "ADFNE"
authors = [
    "Younes Fadakar Alghalandis",
]
interface = "Matlab code"
input_data = """
The parameters for fracture generation are defined in the Matlab code by the
user and include e.g. aperture or an aperture field function and definition of
fracture sets (Fig. @fig:adfne_dfn_3d_two_sets):

~~~matlab
set1 = Field(DFN('dim',3,'n',100,'dir',15,'ddir',-1e9,'minl',0.05,... % DFN set 1
'mu',0.1,'maxl',0.5,'bbx',[0,0,0,1,1,1],'dip',45,'ddip',-1e7),'Poly');
set2 = Field(DFN('dim',3,'n',100,'dir',165,'ddir',-1e9,'minl',0.05,... % DFN set 2
'mu',0.1,'maxl',0.5,'bbx',[0,0,0,1,1,0.5],'dip',45,'ddip',-1e7,...
'shape','e','q',4),'Poly');
fnm = [set1;set2]; % Combined DFN
Draw('ply',fnm);
Export(gcf,'dfn_3d_sets_adfne1.5.png');
~~~

![3D DFN, generated with `ADFNE`, consisting of two sets. Image from ADFNE
[@fadakar_alghalandis_adfne_2017]
manual.](src/images/adfne_dfn_3d_two_sets.png){#fig:adfne_dfn_3d_two_sets}

For length distributions of the fractures only exponential distributions are
demonstrated or mentioned in documentation. Connectivity, based on
documentation, is defined for the generated fracture networks. The network is
iteratively made to match wanted connectivity values i.e. it is calculated from
a realized model and the model is accepted or discarded based on if it matches
the wanted connectivity value.
"""
outputs = """
In the documentation, exporting to `png` images for simple visualization is
most commonly shown but the `Export` further supports data formats such as
`vtk`, `txt`, `xyz` and `geo`. Due to Matlab being an interpreted language the
results are available after code execution as Matlab variables.
"""
remarks = """
The software availability has changed over the years. First version was
released free and open-source on *GitHub* but later versions were behind a
request to the author. Currently version 1.5 is again freely available on
*GitHub* (<https://github.com/AlghalandisComputing/ADFNE1.5>). Whether further
updates are released openly is unknown.

Matlab is a commercial application and therefore use of *ADFNE* requires a paid
Matlab license. The possibility to run *ADFNE* through *GNU Octave*, a free and
open-source Matlab alternative, is mentioned but not demonstrated.

The custom license allows redistribution in source and binary formats provided
that the software is cited and the same copyright notice is distributed.

Overall the functionality seems extensive and is well documented.
"""
license = "Custom"

[url]
repository = "https://github.com/AlghalandisComputing/ADFNE1.5"
documentation = "PDF included with 1.5 zip download"
reference = "https://doi.org/10.1016/j.cageo.2017.02.002"
forum = "https://github.com/AlghalandisComputing/ADFNE1.5/issues"

[state_of_documentation]
installation = """
The software consists of Matlab script files which can be executed in the
Matlab environment.
"""
usage = """
Usage instructions consist of detailed documentation of the different functions
related to modelling and preprocessing and of example cases. The instructions
are clear and well explained.
"""
examples = """
Examples are given in the manual. These are provided along with succinct code
examples which allow the user to reproduce the example figures. Examples
usually start from generating a 2D or 3D DFN randomly or from defined fracture
sets. Subsequently, a DFN is generated and flow through it is modelled by e.g.
solving the backbone, i.e. connected part of the network, and modelling flow
through the backbone channels. The largest example contains 500 fractures which
is considered a medium sized model. Larger models are said to be
computationally very intensive.
"""

[capabilities]
based_on_documentation = """
Fracture modelling type is the Discrete Fracture Network method. The software
is capable of both generating the fracture network and simulating flow within
the generated 2D or 3D network. Furthermore, it contains a number of methods to
characterize the generated network with e.g. a stereonet.

Topology of the generated fracture network is given as a graph of nodes and
edges and the *Connectivity* of the generated network is defined.

Flow through the generated fracture network can be modelled in 2D or 3D with
pipes or hybrid pipe-mesh modelling.

Overall, the capabilities seem to be very extensive and cover most needs of DFN
modelling and subsequent analysis both in 2D and 3D.
"""
based_on_testing = """
"""
