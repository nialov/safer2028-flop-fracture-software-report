name = "Pychan3d"
authors = [
    "Dessirier Benoit",
    "Chin-Fu Tsang",
    "Auli Niemi",
]
interface = "Python code"
input_data = """
Definition of channel geometries in code. E.g.

~~~python
#  The first part shows the generation of a full Lattice network with lognormally distributed channel conductances
#  In this case we choose an even spacing of 1m between channels in all directions
dx, dy, dz = 1., 1., 1.
#  We decide to create a lattice of 50 nodes (49 channels) in each direction
nx, ny, nz = 49, 49, 49
#  The the total network will have a dimension of 49x49x49
#  We choose a mean log conductance of -6 (log10 [m**2/s]) and a standard deviation of 1.5 in each direction
meanlogc, sigma = -6., 1.5
#  Now we create the Lattice network
LN = pychan3d.LatticeNetwork(nx, ny, nz, dx, dy, dz, meanlogc, meanlogc, meanlogc, sigma, sigma, sigma, seed=987654321)
~~~
"""
outputs = """
Modelling outputs can be saved in `vtk` format for viewing, for example, with
`Paraview` software [@ayachit_paraview_2015]. Further coding can be used to
extract further results.
"""
remarks = """
This is primarily a flow and solute transport library, but designed with a
"channel network" approach where transport occurs along one-dimensional
channels rather than, for example, surfaces. The approach is based on a large
set of evidence demonstrating how transport in fracture networks is channelled.
The software is built based on `CHAN3D` code [@gylling_analysis_1998]. The
latest update to the software appears to be in 2018.
"""
license = "MIT"

[url]
repository = "https://github.com/bende937/pychan3d"
documentation = "https://github.com/bende937/pychan3d"
reference = "doi.org/10.1016/j.cageo.2017.11.013"
forum = "https://github.com/bende937/pychan3d"

[state_of_documentation]
installation = """
Installation instructions are provided for native Linux installation.
"""
usage = """
Usage instructions consist of example cases with limited documentation in the form
of comments alongside the methodological introduction in the journal article
where the software is introduced [@dessirier_new_2018].
"""
examples = """
The repository contains an `examples` folder with multiple examples of use. The
examples consist of `Jupyter` notebooks that contain Python code along with
example input data. The examples are for 1) a "full lattice network", 2) a
"full lattice network" that is modified in geometry by carving before modelling
and 3) for an unstructured network of channels, where steady-state flow is
solved. Overall, the examples are specialized and do not focus on fracture
generation, but rather on generating pipe networks and subsequent flow and
transport modelling.
"""

[capabilities]
based_on_documentation = """
The primary purpose of the software is to model channeled flow in fracture
networks. To achieve this, it generates a channel network rather than a
fracture network, and uses the channel network as the basis for flow and solute
transport modelling (Figure @fig:pychan3d_channel_flow).

![Channel networks, generated with `Pychan3d`, with different input parameters
fow modelling flow. Image from
@dessirier_new_2018.](src/images/pychan3d_channel_flow.jpg){#fig:pychan3d_channel_flow}
"""
based_on_testing = """
"""
