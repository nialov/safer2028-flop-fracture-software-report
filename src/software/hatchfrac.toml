name = "hatchfrac"
authors = [
    "Weiwei Zhu",
    "Siarhei Khirevich",
    "Tadeusz W. Patzek",
]
interface = "`C++` and `Matlab` code"
input_data = """
The parameters for fracture generation are defined in `C++` code by the
user. For the length distributions of the fractures, power law distribution optionslaw distribution options
are the best documented. 
"""
outputs = """
`Matlab` code is provided to plot the results. Furthermore, the results are
outputted as text files containing fracture coordinates and cluster labels.
"""
remarks = """
The software mainly aligns itself as being a faster alternative to `ADFNE`
[@fadakar_alghalandis_adfne_2017]. This is achieved by using `C++` instead of
`Matlab`. However, use of `C++` makes interaction with the software more
complex. It is mentioned that the code is not user-friendly and only intended
to demonstrate how to solve the scientific problems for the purposes of a
journal article. Furthermore, the `README.txt` files included in the source
code directory state that only a "part of the HatchFrac code" has been made
available. The lack of a full code base and license makes the further use of
`HatchFrac` very difficult. The capability to grow fractures to have real
abutments against other fractures seems to be the main scientific
novelty of the software (Figure @fig:hatchfrac_termination_sketch).

![Sketch illustrating the algorithm to control fracture growth in `hatchfrac`
using abutments against prior fractures. Image from
@zhu_hatchfrac_2022.](src/images/hatchfrac_termination_sketch.jpg){#fig:hatchfrac_termination_sketch}
"""
license = "Unknown"

[url]
repository = "https://data.mendeley.com/datasets/zhs97tsdry/1"
documentation = ""
reference = "https://doi.org/10.1016/j.compgeo.2022.104917"
forum = ""

[state_of_documentation]
installation = """
Limited instructions are provided for installation in the Visual Studio 2017
environment on Windows.
"""
usage = """
No practical usage instructions are given, with the exception of short
`README.txt` files included with the examples.
"""
examples = """
The reference journal article contains scientific examples of usage: 

~~~
"1. generate 3D discrete fracture networks and check their clusters; 
2. mimic the fracture growth process in a rule-based format;"
~~~

However, running of the examples is only supported in a "Visual Studio 2017"
environment, and limited instructions are provided, for example, on how to
further develop the examples.
"""

[capabilities]
based_on_documentation = """
In the reference journal article, the scientific applicability of the software
is demonstrated for fracture generation in 2D and 3D (Figure
@fig:hatchfrac_3d_fracture_networks) and for percolation, fracture intensity,
and flow and connectivity analysis. The examples included with the source code
demonstrate 3D-DFN generation and fracture growth "in a rule-based format."

![3D fracture networks, generated with `hatchfrac`, where in the left subfigure
network the centres of the fractures follow a "fractal spatial density", whereas
in the right subfigure, they are uniformly distributed. Image from
@zhu_hatchfrac_2022.](src/images/hatchfrac_3d_fracture_networks.jpg){#fig:hatchfrac_3d_fracture_networks}
"""
based_on_testing = """
"""
